version: '3.6'

volumes:
  n8n_storage:
  ollama_storage:
  qdrant_storage:

networks:
  dokploy-network:
    external: true

services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    hostname: ollama
    networks:
      - dokploy-network
    restart: unless-stopped
    environment:
      - OLLAMA_MAX_LOADED_MODELS=1
      - OLLAMA_NUM_PARALLEL=1
    ports:
      - 11434
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.ollama.rule=Host(`ollama.atioperu.com`)'
      - 'traefik.http.routers.ollama.entrypoints=websecure'
      - 'traefik.http.routers.ollama.tls.certresolver=letsencrypt'
      - 'traefik.http.services.ollama.loadbalancer.server.port=11434'
    volumes:
      - ollama_storage:/root/.ollama
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  ollama-init:
    image: ollama/ollama:latest
    networks:
      - dokploy-network
    container_name: ollama-init
    volumes:
      - ollama_storage:/root/.ollama
    entrypoint: /bin/sh
    environment:
      - OLLAMA_HOST=ollama:11434
    command:
      - "-c"
      - "sleep 10; ollama pull gemma2:2b || true"
    depends_on:
      ollama:
        condition: service_healthy
    restart: "no"

  n8n-import:
    image: n8nio/n8n:latest
    hostname: n8n-import
    container_name: n8n-import
    networks:
      - dokploy-network
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${POSTGRESDB_HOST}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/demo-data/credentials && n8n import:workflow --separate --input=/demo-data/workflows"
    volumes:
      - ./n8n/demo-data:/demo-data
    restart: "no"

  n8n:
    image: n8nio/n8n:latest
    hostname: n8n
    container_name: n8n
    networks:
      - dokploy-network
    restart: unless-stopped
    ports:
      - 5678
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.n8n.rule=Host(`n8n.atioperu.com`)'
      - 'traefik.http.routers.n8n.entrypoints=websecure'
      - 'traefik.http.routers.n8n.tls.certresolver=letsencrypt'
      - 'traefik.http.services.n8n.loadbalancer.server.port=5678'
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${POSTGRESDB_HOST}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
      - OLLAMA_HOST=${OLLAMA_HOST:-ollama:11434}
      - N8N_DEFAULT_BINARY_DATA_MODE=filesystem
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/demo-data:/demo-data
      - ./shared:/data/shared
    depends_on:
      n8n-import:
        condition: service_completed_successfully

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    networks:
      - dokploy-network
    restart: unless-stopped
    ports:
      - 6333
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.qdrant.rule=Host(`qdrant.atioperu.com`)'
      - 'traefik.http.routers.qdrant.entrypoints=websecure'
      - 'traefik.http.routers.qdrant.tls.certresolver=letsencrypt'
      - 'traefik.http.services.qdrant.loadbalancer.server.port=6333'
    volumes:
      - qdrant_storage:/qdrant/storage
